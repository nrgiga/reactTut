{"_id":"read-input","_rev":"4-3a898fb73f35e24f333b392c0400a564","name":"read-input","description":"Easily read from stdin or files.","dist-tags":{"latest":"0.2.0"},"versions":{"0.1.0":{"name":"read-input","version":"0.1.0","description":"Easily read from stdin or files.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/rstacruz/read-input.git"},"keywords":["input","read","stdin"],"author":{"name":"Rico Sta. Cruz","email":"hi@ricostacruz.com"},"license":"MIT","bugs":{"url":"https://github.com/rstacruz/read-input/issues"},"homepage":"https://github.com/rstacruz/read-input","devDependencies":{"chai":"^1.9.1","mocha":"^1.21.3"},"gitHead":"133672f98db9064a82fae67de93b9dcd31dfe512","_id":"read-input@0.1.0","_shasum":"ebbd5a5a4c80613df9722810819967fa962ad15b","_from":".","_npmVersion":"1.4.16","_npmUser":{"name":"rstacruz","email":"rico@ricostacruz.com"},"maintainers":[{"name":"rstacruz","email":"rico@ricostacruz.com"}],"dist":{"shasum":"ebbd5a5a4c80613df9722810819967fa962ad15b","tarball":"http://registry.npmjs.org/read-input/-/read-input-0.1.0.tgz"}},"0.2.0":{"name":"read-input","version":"0.2.0","description":"Easily read from stdin or files.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/rstacruz/read-input.git"},"keywords":["input","read","stdin"],"author":{"name":"Rico Sta. Cruz","email":"hi@ricostacruz.com"},"license":"MIT","bugs":{"url":"https://github.com/rstacruz/read-input/issues"},"homepage":"https://github.com/rstacruz/read-input","devDependencies":{"chai":"^1.9.1","mocha":"^1.21.3"},"gitHead":"ff3edcdc6d080ebba4f4218aa705b3ea8c2a9472","_id":"read-input@0.2.0","_shasum":"6e0e80bdf6f492d6b0d07819834e2acc8ee81d57","_from":".","_npmVersion":"1.4.16","_npmUser":{"name":"rstacruz","email":"rico@ricostacruz.com"},"maintainers":[{"name":"rstacruz","email":"rico@ricostacruz.com"}],"dist":{"shasum":"6e0e80bdf6f492d6b0d07819834e2acc8ee81d57","tarball":"http://registry.npmjs.org/read-input/-/read-input-0.2.0.tgz"}}},"readme":"# read-input\n\nWrite CLI utilities that take a stream of data either stdin from one of more \nfiles. To be able to handle this:\n\n```sh\n$ yourutil file.txt\n$ yourutil file1.txt file2.txt\n$ yourutil < file.txt\n$ cat file.txt | yourutil\n```\n\nJust do this:\n\n```js\n#!/usr/bin/env node\nvar read = require('read-input');\nvar fnames = process.argv.slice(2);\n\nread(fnames, function (err, res) {\n  // `err` will be given if at least one of the files fail.\n  if (err) {\n    console.error(err.message);\n    process.exit(8);\n  }\n\n  res.data /* => \"...\" */\n});\n```\n\n<!-- include: index.js -->\n\n### read()\n> `read(files, function(err, res) { ... })`\n\nReads from files. If no files are given, read from stdin.\nThe result `res` is a [result object](#res). If any of the files can't be\nread, `err` will be an error object.\n\n```js\nvar read = require('read-input');\nvar fnames = process.argv.slice(2); //=> ['readme.txt']\n\nread(fnames, function (err, res) {\n  res.data       // '...'\n  res.error      // undefined or Error()\n  res.stdin      // true or false\n  res.files      // [...]\n  res.successes  // [...]\n  res.failures   // [...]\n});\n```\n\nYou can also iterate through `res.files`.\n\n```js\nread(fnames, function (err, res) {\n  res.files.forEach(function (f) {\n    f.data    // ...\n    f.error   // undefined or Error(...)\n    f.stdin   // true or false\n    f.name    // 'readme.txt'\n  }\n});\n```\n\nIf `files` is a blank array (or null), data will be read from stdin. The\nresulting data will have a similar schema.\n\n```js\nread([], function (err, res) {\n  ...\n});\n```\n\n### read.stdin()\n> `read.stdin(fn)`\n\nRead data from standard input. The `err` argument will always be null.\n\n```js\nread.stdin(function (err, data) {\n  console.log(data); // string\n});\n```\n\n### res\n\nThe results value is an object passed to the callback of `read()`.\n\n* `data` *(String)* <span class='dash'>&mdash;</span> a concatenation of all data in all the files.\n* `error` *(Error)* <span class='dash'>&mdash;</span> The first error in all files. `undefined` if successful.\n* `stdin` *(Boolean)* <span class='dash'>&mdash;</span> is `true` if the file is read from stdin\n* `files` *(Array)* <span class='dash'>&mdash;</span> A list of files.\n* `failures` *(Array)* <span class='dash'>&mdash;</span> A list of files that failed.\n* `successes` *(Array)* <span class='dash'>&mdash;</span> A list of files that succeeded.\n\nThe `files`, `failures` and `successes` are lists of files. Each of the items in these lists\nhas a similar list of values:\n\n* `data` *(String)* <span class='dash'>&mdash;</span> File data\n* `error` *(Error)* <span class='dash'>&mdash;</span> the first error encountered, if applicable\n* `stdin` *(Boolean)* <span class='dash'>&mdash;</span> is `true` if the file is read from stdin\n* `name` *(String)* <span class='dash'>&mdash;</span> File name\n\nSee [read()](read) for an example.\n\n<!-- /include -->\n\n## Thanks\n\n**read-input** Â© 2014+, Rico Sta. Cruz. Released under the [MIT License].<br>\nAuthored and maintained by Rico Sta. Cruz with help from [contributors].\n\n> [ricostacruz.com](http://ricostacruz.com) &nbsp;&middot;&nbsp;\n> GitHub [@rstacruz](https://github.com/rstacruz) &nbsp;&middot;&nbsp;\n> Twitter [@rstacruz](https://twitter.com/rstacruz)\n\n[MIT License]: License.md\n[MIT License]: http://mit-license.org/\n[contributors]: http://github.com/rstacruz/nprogress/contributors\n","maintainers":[{"name":"rstacruz","email":"rico@ricostacruz.com"}],"time":{"modified":"2014-08-27T05:38:13.960Z","created":"2014-08-05T06:19:55.788Z","0.1.0":"2014-08-05T06:19:55.788Z","0.2.0":"2014-08-27T05:38:13.960Z"},"homepage":"https://github.com/rstacruz/read-input","keywords":["input","read","stdin"],"repository":{"type":"git","url":"git://github.com/rstacruz/read-input.git"},"author":{"name":"Rico Sta. Cruz","email":"hi@ricostacruz.com"},"bugs":{"url":"https://github.com/rstacruz/read-input/issues"},"license":"MIT","readmeFilename":"Readme.md","_attachments":{},"_etag":"\"CEPXL27RSJ95YNJ1JTZU85TIB\""}